.products-bkgd {
  position: relative;
  background-color: transparent;
  height: 100vh;
  display: flex;

  @include respondDesktop(atSmall) {
    height: 175vh;
  }
}

.white-cover {
  width: 100%;
  height: 100%;
  position: absolute;
  z-index: 3;
  background-color: rgba(255, 255, 255, 0.8);
}

.products-clocks {
  flex: 1;
  position: absolute;
  background-position: bottom center;
  background-size: cover;
  background-repeat: no-repeat;
  width: 50vw;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

  &::before {
    /* if I want some level of opacity, I'll code this. */
    position: absolute;
    content: "";
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    width: 50%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0);
    z-index: -1;
  }

  &__clocks-watches {
    position: relative;
    background-size: cover;
  }
}

.gallery {
  margin: auto auto;
  padding: 1em;
  display: grid;

  grid-template-rows: repeat(5, 1fr);
  grid-template-columns: repeat(6, 1fr);
  grid-gap: 1em;

  &__img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  @include respondDesktop(atSmall) {
    margin: 1em;
    /*grid-template-rows: repeat(10, 9vw);*/
    grid-template-rows: repeat(10, 1fr);
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 1em;
  }

  /*@include respondDesktop(atSmall) {
    grid-template-rows: repeat(10, minmax(1.5rem, min-content));
    grid-template-columns: repeat(auto-fit, minmax(1.5rem, 1fr));
  }*/

  &__item {
    &--1 {
      grid-row: 1 / 2;
      grid-column: 1 / 2;
    }

    &--2 {
      grid-row: 1 / 2;
      grid-column: 2 / span 2;
    }

    &--3 {
      grid-row: 1 / 2;
      grid-column: 4 / 6;

      @include respondDesktop(atSmall) {
        grid-row: 2 / 3;
        grid-column: 1 / span 2;
      }
    }

    &--4 {
      grid-row: 1 / 2;
      grid-column: 6 / -1;

      @include respondDesktop(atSmall) {
        grid-row: 2 / 3;
        grid-column: 3 / 4;
      }
    }

    &--5 {
      grid-row: 2 / span 2;
      grid-column: 1 / span 2;

      @include respondDesktop(atSmall) {
        grid-row: 3 / 4;
        grid-column: 1 / 3;
      }
    }

    &--6 {
      grid-row: 2 / span 2;
      grid-column: 3 / span 2;

      @include respondDesktop(atSmall) {
        grid-row: 3 / 5;
        grid-column: 3 / 4;
      }
    }

    &--7 {
      grid-row: 2 / 4;
      grid-column: 5 / 6;

      @include respondDesktop(atSmall) {
        grid-row: 4 / 6;
        grid-column: 1 / 3;
      }
    }

    &--8 {
      grid-row: 2 / span 2;
      grid-column: 6 / 7;

      @include respondDesktop(atSmall) {
        grid-row: 5 / span 2;
        grid-column: 3 / 4;
      }
    }

    &--9 {
      grid-row: 4 / 5;
      grid-column: 1 / 3;

      @include respondDesktop(atSmall) {
        grid-row: 7 / 8;
        grid-column: 1 / span 2;
      }
    }

    &--10 {
      grid-row: 4 / 5;
      grid-column: 3 / 5;

      @include respondDesktop(atSmall) {
        grid-row: 7 / 9;
        grid-column: 3 / -1;
      }
    }

    &--11 {
      grid-row: 4 / 5;
      grid-column: 5 / span 2;

      @include respondDesktop(atSmall) {
        grid-row: 8 / 9;
        grid-column: 1 / span 3;
      }
    }

    &--12 {
      grid-row: 5 / 6;
      grid-column: 1 / 2;

      @include respondDesktop(atSmall) {
        grid-row: 9 / 10;
        grid-column: 1 / 2;
      }
    }

    &--13 {
      grid-row: 5 / 6;
      grid-column: 2 / span 2;

      @include respondDesktop(atSmall) {
        grid-row: 9 / 10;
        grid-column: 2 / span 2;
      }
    }

    &--14 {
      grid-row: 5 / 6;
      grid-column: 4 / span 2;

      @include respondDesktop(atSmall) {
        grid-row: 10 / 11;
        grid-column: 1 / span 2;
      }
    }

    &--15 {
      grid-row: 5 / -1;
      grid-column: 6 / -1;

      @include respondDesktop(atSmall) {
        grid-row: 10 / 11;
        grid-column: 3 / 4;
      }
    }
  }
}

.products-miscellaneous {
  flex: 1;
  position: absolute;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: bottom center;
  width: 50vw;
  top: 0;
  bottom: 0;
  left: 50%;
  right: 0;

  &::before {
    /* if I want some level of opacity, I'll code this. */
    position: absolute;
    content: "";
    width: 50%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0);
    z-index: -1;
  }
}
